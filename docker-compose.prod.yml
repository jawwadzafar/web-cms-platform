# Production Docker Compose with Nginx
version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: medical-cms-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: payload
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - medical-cms-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/payload --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Payload CMS Backend
  payload-backend:
    build:
      context: ./payload-backend
      dockerfile: Dockerfile
    container_name: medical-cms-backend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/payload?authSource=admin
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3001
      - PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL:-https://your-domain.com}
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - mongodb
    networks:
      - medical-cms-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  nextjs-frontend:
    build:
      context: ./nextjs-frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://your-domain.com/api}
        NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL:-https://your-domain.com}
    container_name: medical-cms-frontend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://your-domain.com/api}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL:-https://your-domain.com}
    depends_on:
      - payload-backend
    networks:
      - medical-cms-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: medical-cms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    depends_on:
      - nextjs-frontend
      - payload-backend
    networks:
      - medical-cms-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  uploads_data:
    driver: local

networks:
  medical-cms-network:
    driver: bridge