version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: system-cms-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: payload
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - system-cms-network

  # Redis for caching (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: system-cms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - system-cms-network

  # Payload CMS Backend (cms-admin)
  cms-admin:
    build:
      context: ./cms-admin
      dockerfile: Dockerfile
    container_name: system-cms-admin
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URI=mongodb://admin:password123@mongodb:27017/payload?authSource=admin
      - PAYLOAD_SECRET=your-super-secret-payload-key-change-in-production
      - PAYLOAD_PUBLIC_SERVER_URL=http://localhost:3100
      - PORT=3100
    ports:
      - "3100:3100"
    volumes:
      - cms_uploads:/app/uploads
      - cms_media:/app/public/media
    depends_on:
      - mongodb
    networks:
      - system-cms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  nextjs-frontend:
    build:
      context: ./nextjs-frontend
      dockerfile: Dockerfile
    container_name: system-cms-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3100
      - NEXT_PUBLIC_SITE_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - cms-admin
    networks:
      - system-cms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: system-cms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - cms_uploads:/var/www/uploads:ro
      - cms_media:/var/www/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - cms-admin
      - nextjs-frontend
    networks:
      - system-cms-network

  # Mailhog for email testing (optional)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: system-cms-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - system-cms-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  cms_uploads:
    driver: local
  cms_media:
    driver: local

networks:
  system-cms-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16